# Bluetooth over USB/IP
I've been running zigbee2mqtt on my RT-AX86U Pro for a while now and it's been wonderful as my router is in excellent place signal wise and my home automation server is in very bad one. Recently I wanted to use Bluetooth USB stick but the same problem applies. However, unlike zigbee2mqtt which can be ran on router itself, running Bluetooth anything would be probably too much to ask. But how about sharing USB stick itself over TCP/IP? Turns out that too works nicely. 

## Install entware
https://github.com/jarpatus/asuswrt_scripts/blob/main/README.md

## Create swap
https://github.com/jarpatus/asuswrt_scripts/blob/main/swapfile.md

Note: On models having 1GB RAM swap may not be necessary, however perhaps it's best to use it just to be on safe side.

## USB/IP driver 
https://github.com/jarpatus/asuswrt_scripts/blob/main/kernel_modules.md

```
CONFIG_USBIP_CORE=m
```

When you compile modules, you will get prompted what to do for sub-modules, mark Host driver to be compiled as module. 

## usbip
Install usbip-server, load driver and test.

```
opkg install usbip-server

```







Start zigbee2mqtt.
```
npm start
```

## Start on boot
To load kernel modules and start zigbee2mqtt on boot create init file /opt/etc/init.d/S50zigbee2mqtt containing following script:

```
#!/bin/sh

DESC=zigbee2mqtt
DIR=/opt/opt/zigbee2mqtt
PIDFILE=/tmp/$DESC.pid

ACTION=$1
CALLER=$2

ansi_red="\033[1;31m";
ansi_white="\033[1;37m";
ansi_green="\033[1;32m";
ansi_std="\033[m";

start() {
        echo -e -n "$ansi_white Starting $DESC... $ansi_std"
        insmod /opt/opt/cp210x/cp210x.ko 2> /dev/null
        daemonize -c $DIR -p $PIDFILE /opt/bin/node index.js
        if [ $? -eq 0 ]; then
                echo -e "            $ansi_green done. $ansi_std"
                logger "Started $DESC from $CALLER."
                return 0
        else
                echo -e "            $ansi_red failed. $ansi_std"
                logger "Failed to start $DESC from $CALLER."
                return 255
        fi
}

stop() {
        echo -e -n "$ansi_white Shutting down $DESC... $ansi_std"
        kill `cat $PIDFILE`
        while kill -0 `cat $PIDFILE` 2> /dev/null; do
            sleep 1
        done
        if [ $? -eq 0 ]; then
                echo -e "       $ansi_green done. $ansi_std"
                return 0
        else
                echo -e "       $ansi_red failed. $ansi_std"
                return 255
        fi
}

_kill() {
        echo -e -n "$ansi_white Killing $DESC... $ansi_std"
        kill -9 `cat $PIDFILE`
        if [ $? -eq 0 ]; then
                echo -e "             $ansi_green done. $ansi_std"
                return 0
        else
                echo -e "             $ansi_red failed. $ansi_std"
                return 255
        fi
 }

check() {
        echo -e -n "$ansi_white Checking $DESC... "
        test -f $PIDFILE && kill -0 `cat $PIDFILE` 2> /dev/null
        if [ $? -eq 0 ]; then
                echo -e "            $ansi_green alive. $ansi_std";
                return 0
        else
                echo -e "            $ansi_red dead. $ansi_std";
                return 1
        fi
}

case $ACTION in
        start)
                check || start
                ;;
        stop)
                check && stop
                ;;
        kill)
                check && _kill
                ;;
        restart)
                check && stop
                start
                ;;
        check)
                check
                ;;
        reconfigure)
                stop
                ;;
        *)
                echo -e "$ansi_white Usage: $0 (start|stop|restart|check|kill|reconfigure)$ansi_std"
                exit 1
                ;;
esac
```

- Make it executable
```
chmod +x /opt/etc/init.d/S50zigbee2mqtt
```
